// Generated by Dagger (https://dagger.dev).
package com.fkulesevic.movielicious.di.module;

import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_FirebaseReferenceFactory implements Factory<DatabaseReference> {
  private final AppModule module;

  private final Provider<FirebaseDatabase> firebaseDatabaseProvider;

  public AppModule_FirebaseReferenceFactory(AppModule module,
      Provider<FirebaseDatabase> firebaseDatabaseProvider) {
    this.module = module;
    this.firebaseDatabaseProvider = firebaseDatabaseProvider;
  }

  @Override
  public DatabaseReference get() {
    return firebaseReference(module, firebaseDatabaseProvider.get());
  }

  public static AppModule_FirebaseReferenceFactory create(AppModule module,
      Provider<FirebaseDatabase> firebaseDatabaseProvider) {
    return new AppModule_FirebaseReferenceFactory(module, firebaseDatabaseProvider);
  }

  public static DatabaseReference firebaseReference(AppModule instance,
      FirebaseDatabase firebaseDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.firebaseReference(firebaseDatabase));
  }
}
